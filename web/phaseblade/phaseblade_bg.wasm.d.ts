/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_nodeconfig_free(a: number, b: number): void;
export function __wbg_get_nodeconfig_id(a: number): number;
export function __wbg_set_nodeconfig_id(a: number, b: number): void;
export function __wbg_get_nodeconfig_cpu_freq_hz(a: number): number;
export function __wbg_set_nodeconfig_cpu_freq_hz(a: number, b: number): void;
export function __wbg_get_nodeconfig_tick_interval(a: number): number;
export function __wbg_set_nodeconfig_tick_interval(a: number, b: number): void;
export function __wbg_get_nodeconfig_cycle_offset(a: number): number;
export function __wbg_set_nodeconfig_cycle_offset(a: number, b: number): void;
export function __wbg_get_nodeconfig_clock_drift_factor(a: number): number;
export function __wbg_set_nodeconfig_clock_drift_factor(a: number, b: number): void;
export function nodeconfig_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): number;
export function __wbg_nodestate_free(a: number, b: number): void;
export function __wbg_get_nodestate_id(a: number): number;
export function __wbg_set_nodestate_id(a: number, b: number): void;
export function __wbg_get_nodestate_local_time(a: number): number;
export function __wbg_set_nodestate_local_time(a: number, b: number): void;
export function nodestate_position(a: number): Array;
export function nodestate_unit_type(a: number): Array;
export function nodestate_task_schedule(a: number): Array;
export function __wbg_get_nodestate_local_cycle(a: number): number;
export function __wbg_set_nodestate_local_cycle(a: number, b: number): void;
export function __wbg_engine_free(a: number, b: number): void;
export function engine_new(): number;
export function engine_getState(a: number): number;
export function engine_addNode(a: number, b: number): void;
export function engine_step(a: number): void;
export function engine_run(a: number, b: number): void;
export function engine_availableTasks(a: number): number;
export function __wbg_enginestate_free(a: number, b: number): void;
export function enginestate_new(a: number, b: number, c: number): number;
export function enginestate_cycle(a: number): number;
export function enginestate_nodes(a: number): Array;
export function __wbg_taskconfig_free(a: number, b: number): void;
export function __wbg_get_taskconfig_id(a: number): number;
export function __wbg_set_taskconfig_id(a: number, b: number): void;
export function __wbg_get_taskconfig_priority(a: number): number;
export function __wbg_set_taskconfig_priority(a: number, b: number): void;
export function taskconfig_new(a: number, b: number, c: number, d: number): number;
export function taskconfig_name(a: number): Array;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function __externref_table_alloc(): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __externref_drop_slice(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_start(): void;
